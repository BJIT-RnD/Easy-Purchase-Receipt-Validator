//
//  File.swift
//  
//
//  Created by BJIT on 9/11/23.
//

import Foundation
import XCTest
@testable import Easy_Purchase_Receipt_Validator

class InAppReceiptValidatorTests: XCTestCase {
    // Creating object for InAppReceiptValidator
    var receiptInfo: InAppReceiptValidator?
    // sample receipt
    // swiftlint:disable:next line_length
    let easyPurchaseSandboxReceipt = ""
    let easyPurchaseInvalidSandboxReceipt = "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"

    override func setUp() {
        super.setUp()
        // Arrange
        guard let data = Data(base64Encoded: easyPurchaseSandboxReceipt) else {
            return
        }
        let appleContainer = try? AppleContainer(data: data)
        receiptInfo = try? appleContainer?.AppleReceipt()
    }

    override func tearDown() {
        super.tearDown()
        // Tear down the test environment
        // Release the object to free up resources
        receiptInfo = nil
    }
//
    /// Test case to validate the extraction of bundle identifier from InAppReceipt payload.
    func test_InAppReceiptValidator_whenOriginalReceiptGiven_bundleIdentifierShouldEqual() {
        // When
        let bundleIdentifier = receiptInfo?.bundleIdentifier

        // Then
        XCTAssertEqual(bundleIdentifier, "com.bjitgroup.easypurchase", "Bundle identifier should match the expected value.")
    }
//
    /// Test case to validate the extraction of app version from InAppReceipt payload.
    func test_InAppReceiptValidator_whenOriginalReceiptGiven_bundleVersionShouldEqual() {
        // When
        let bundleVersion = receiptInfo?.bundleVersion

        // Then
        XCTAssertEqual(bundleVersion, "1", "App version should match the expected value.")
    }
//
    /// Test case to validate the extraction of original app version from InAppReceipt payload.
    func test_InAppReceiptValidator_whenOriginalReceiptGiven_originalAppVersionShouldEqual() {
        // When
        let originalAppVersion = receiptInfo?.originalAppVersion

        // Then
        XCTAssertEqual(originalAppVersion, "1.0", "Original app version should match the expected value.")
    }
//
    /// Test case to validate the extraction of invalid bundle identifier from InAppReceipt payload.
    func test_InAppReceiptValidator_whenInvalidReceiptGiven_bundleIdentifierShouldNotEqual() {
        // Arrange
        guard let data = Data(base64Encoded: easyPurchaseInvalidSandboxReceipt) else {
            return
        }
        let appleContainer = try? AppleContainer(data: data)
        receiptInfo = try? appleContainer?.AppleReceipt()
        // When
        let bundleIdentifier = receiptInfo?.bundleIdentifier

        // Then
        XCTAssertNotEqual(bundleIdentifier, "com.bjitgroup.easypurchase", "Bundle identifier should match the expected value.")
        XCTAssertNil(bundleIdentifier, "Bundle Identifier should be nil but it is having value")
    }
//
    /// Test case to validate the extraction of invalid app version from InAppReceipt payload.
    func test_InAppReceiptValidator_whenInvalidReceiptGiven_bundleVersionShouldNotEqual() {
        // Arrange
        guard let data = Data(base64Encoded: easyPurchaseInvalidSandboxReceipt) else {
            return
        }
        let appleContainer = try? AppleContainer(data: data)
        receiptInfo = try? appleContainer?.AppleReceipt()
        // When
        let bundleVersion = receiptInfo?.bundleVersion
        // Then
        XCTAssertNotEqual(bundleVersion, "1.0", "Bundle Version should match the expected value.")
        XCTAssertNil(bundleVersion, "Bundle Version should be nil but it is having value")
    }
    /// Test case to validate the extraction of invalid original app version from InAppReceipt payload.
    func test_InAppReceiptValidator_whenInvalidReceiptGiven_originalAppVersionShouldNotEqual() {
        guard let data = Data(base64Encoded: easyPurchaseInvalidSandboxReceipt) else {
            return
        }
        let appleContainer = try? AppleContainer(data: data)
        receiptInfo = try? appleContainer?.AppleReceipt()
        // When
        let originalAppVersion = receiptInfo?.originalAppVersion
        // Then
        XCTAssertNotEqual(originalAppVersion, "1.0", "Original app version should match the expected value.")
        XCTAssertNil(originalAppVersion, "Original App Version be nil but it is having value")
    }
}

// MARK: Extension
extension InAppReceiptValidatorTests {
        // MARK: - Validation Tests

        func test_InAppReceiptValidator_validationCheck_validationTestShouldThrow() {
            // As validation happens with real device guid, In testing validation will always throw error.
            XCTAssertThrowsError(try receiptInfo?.isValidReceipt(), "In testing the function should always throw error")
        }
        func test_InAppReceiptValidator_whenInvalidReceiptGiven_receiptInfoShouldNil() {
            guard let data = Data(base64Encoded: easyPurchaseInvalidSandboxReceipt) else {
                return
            }
            let appleContainer = try? AppleContainer(data: data)
            do {
                receiptInfo = try appleContainer?.AppleReceipt()
                XCTAssertNil(receiptInfo, "Receipt should not have value, but it is containing some value")
            } catch {
                XCTFail()
            }
        }

        func test_InAppReceiptValidator_whenOriginalReceiptGiven_checkExpirationDateValidNotNilShouldReturnTrue() {
           // Assuming the expiration date is set to tomorrow, this test checks if checkExpirationDateValid returns true
            XCTAssertTrue(((receiptInfo?.checkExpirationDateValid()) != nil))
        }
}

// MARK: Extension
extension InAppReceiptValidatorTests {
    func test_OriginalTransactionIdentifier_whenOriginalReceiptGiven_ProductIdWithTransactionIdGiven_originalTransactionIdentifierShouldEqual() {
        let productIdentifier = "com.bjitgroup.easypurchase.autorenewweekly"
        XCTAssertEqual(receiptInfo?.originalTransactionIdentifier(ofProductIdentifier: productIdentifier), "2000000448590922")
    }

    func test_OriginalTransactionIdentifier_whenOriginalReceiptGiven_ProductIdWithNoTransactionIdGiven_originalTransactionIdentifierShouldReturnNil() {
        // Test when there are no purchases
        XCTAssertNil(receiptInfo?.originalTransactionIdentifier(ofProductIdentifier: ""))
    }
    func test_containsPurchase_whenOriginalReceipt_productIdWithPurchasesGiven_containsPurchaseNotNilShouldReturnTrue() {
        let productIdentifier = "com.bjitgroup.easypurchase.autorenewweekly"
        XCTAssertTrue(((receiptInfo?.containsPurchase(ofProductIdentifier: productIdentifier)) != nil))
    }

    func test_containsPurchase_whenOriginalReceiptGiven_productIdWithNoPurchasesGiven_containsPurchaseNotNilShouldReturnFalse() {
        // Test when there are no purchases
        XCTAssertFalse(((receiptInfo?.containsPurchase(ofProductIdentifier: "")) == nil))
    }

    func test_CheckPurchaseExpiredDatebyProductId_whenOriginalReceiptGiven_withExpirationDate_ShouldReturnNil() {
        let productIdentifier = "com.bjitgroup.easypurchase.autorenewweekly"
        // Test when there are purchases with expiration date
        XCTAssertNotNil(receiptInfo?.checkPurchaseExpiredDatebyProductId(ofProductIdentifier: productIdentifier))
    }

    func test_CheckPurchaseExpiredDatebyProductId_whenOriginalReceiptGiven_whenNoExpirationDate_ShouldReturnNil() {
        // Test when there are purchases without expiration date
        XCTAssertNil(receiptInfo?.checkPurchaseExpiredDatebyProductId(ofProductIdentifier: "com.bjitgroup.easypurchase.consumable.tencoin"))
    }

    func testCheckPurchaseExpiredDatebyProductId_whenOriginalReceiptGiven_whenNoPurchases_ShouldReturnNil() {
        // Test when there are no purchases
        XCTAssertNil(receiptInfo?.checkPurchaseExpiredDatebyProductId(ofProductIdentifier: "com.bjitgroup.easypurchase.autorenewwmontly"))
    }
}
